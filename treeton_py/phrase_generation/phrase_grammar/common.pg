# Грамматика для генератора задается в виде неупорядоченного набора конструкций.
#
# Синтаксис задания конструкций:
#
# Вариант 1:
# <имя синтаксической конструкции>:
#   <список вариантов составных частей конструкции>
#
# При синтезе данной конструкции будет выбираться случайный вариант из этого списка. Элементом списка может быть:
#   1. Строка, явно задающая лексическое выражение для данной конструкции
#   2. Словарь с единственным ключом lookup, значением которого является путь (через точки) в системе словарей текущей
#      формы. Использование такой конструкции позволяет взять конкретное лексическое выражение из текущего
#      информационного контекста. Например, lookup: song.title означает "возьми значение слота song и уже в нем обратись
#      к значению поля title".
#   3. Сложная конструкция в виде словаря со следующими ключами:
#       root - позволяет задавать список конструкций, которые могут быть выбраны в качестве корня данной синтаксической
#             конструкции.
#             Значением является список имен конструкций.
#             Кроме того, элементом списка может быть так же словарь, явно задающий безымянную (inline) конструкцию.
#             В момент синтеза в качестве корня будет выбираться случайная конструкция из этого списка.
#             Конструкции из списка могут быть определены как до, так и после объемлющей конструкции.
#       <имя семантической роли> - ключ в виде имени семантической роли указывает на то, какие конструкции следует
#             подчинить корню объемлющей конструкции.
#             Значением является список списков конструкций. В момент синтеза из каждого внутреннего списка выбирается
#             одна случайная конструкция и подчиняется корню конструкции (от корня к подчиненной конструкции проводится
#             связь, помеченная данной семантической ролью).
#             Если у выбранного корня данной конструкции есть характеристики gov для данной семантической роли, то в
#             момент подчинения они будут применяться к корню подчиняемой конструкции.
#             По аналогии с заданием конструкций для корня, вместо имени подчиняемой конструкции можно использовать
#             явное задание безымянных (inline) конструкций.
#
# Вариант 2:
# <имя синтаксической конструкции>:
#   extends: <список конструкций, которые расширяет данная>
#   content: <список составных частей, такой же, как описывается в варианте 1>
#   gov: <словарь, описывающий семантические роли, допустимые для данной конструкции>
#   tag: имя тега, который следует навесить на данную конструкцию при синтезе (теги в понимании винсового nlu)
#   punctuation: информация о знаках пунктуации (пока поддерживаются указания левого и/или правого пунктуаторов)
#
#   Все ключи опциональные.
#   Ключ extends позволяет наследовать характеристики другой конструкции. Наследуются семантические роли, тэги и
#     информация о пунктуации.
#     Значением является список конструкций, от которых нужно отнаследовать данную.
#   Ключ gov позволяет указать грамматические характеристики, которые нужно распространить на подчиняемую конструкцию.
#     Значением является словарь, ключами которого являются название конкретных семантических ролей, а
#     значениями - словари, описывающие характеристики конструкций, которые могут заполнять соответствующие роли.
#     В настоящее время поддерживаются следующие характеристики семантических ролей:
#        gramm - список граммем, которые будут использоваться инфлектором для постановки слов подчиняемой конструкции
#                в правильную форму
#        agree - список согласовательных категорий, значения которых для подчиняемого элемента должны
#                совпадать со значениями соответствующих
#                категорий у корня задаваемой конструкции.
#                Пока поддерживаются категории рода (gender), числа (number) и падежа (case).
#        optional - флаг, указывающий на то, обязательно ли заполнять данную роль при синтезе всей конструкции
#        max_cardinality - число, ограничивающее количество заполнителей данной роли (по умолчанию равно 5)
#        orientation - позволяет указать, с какой стороны от корня конструкции должен стоять заполнитель роли.
#                      Поддерживается два значения: left и right. Если ничего не указывать, то при синтезе будут
#                      использоваться обе возможности.
#        prefix - позволяет указывать строки, одну из которых (выбирается случайно) необходимо поставить перед
#                 подчиняемой конструкцией в момент синтеза. Это удобно для работы с предлогами и союзами.
#
# Результатом синтеза всегда является случайное семантико-синтаксическое дерево, удовлетворяющее заданной грамматике,
# которое, в свою очередь, линеаризуется cлучайным образом. В текущей реализации при синтезе используются только
# проективные линеаризации.
# Синтез всегда производится в рамках некоторого информационного контекста, заданного словарем. Причем синтезируются
# только такие конструкции, в которых каждый из ключей контекста используется (с помощью операции lookup)
# ровно один раз.

conj:
  gov:
    conjunct:
      max_cardinality: 5
      agree: [case,number]

abstract_clause:
  gov:
    oblig_aux:
      indecl: true
    aux:
      indecl: true
      optional: true

imperative_clause:
  extends: abstract_clause
  gov:
    imperative:
      gramm: [verb,fin,act,imp]

infinitive_clause:
  extends: abstract_clause
  gov:
    infinitive:
      gramm: [verb,inf]

finite_clause:
  extends: abstract_clause
  gov:
    action:
      agree: [number,gender]
      gramm: [verb,fin]

bracketed:
  punctuation:
#    left: '"'
#    right: '"'
  gov:
    inner:
      indecl: true

abstract_action:
  extends: abstract_entity
  gramm: [verb,fin]
  gov:
    object:
      gramm: [acc]
    subject:
      gramm: [nom]
    dative_object:
      gramm: [dat]      

abstract_entity:
  gov:
    purpose:
      optional: true
      gramm: [noun,gen]
      prefix: [для]
    relative:
      optional: true
      agree: [number,gender,animacy]
      orientation: right

# потом порефакторить так, чтобы не надо было выписывать комбинации уникальности и опциональности

relative_word:
  gov:
    relative_clause:
      agree: [number,gender]
      orientation: right
  lex: [который]

relative_pro:
  gov:
    relative_clause:
      agree: [number,gender]
      orientation: right
      prefix: [что]
  gramm: [neut,sing]
  lex: [это,то]  

abstract_object:
  extends: abstract_entity
  gramm: [noun,nom]
  gov:
    attr:
      optional: true
      max_cardinality: 3
      agree: [case,number,gender,animacy]
    attr_uniq:
      orientation: left
      max_cardinality: 1
      agree: [case,number,gender,animacy]
    attr_uniq_opt:
      optional: true
      orientation: left
      max_cardinality: 1
      agree: [case,number,gender,animacy]
    attr_oblig:
      orientation: left
      max_cardinality: 1
      agree: [case,number,gender,animacy]
    any_indecl:
      optional: true
      indecl: true
    any_uniq_indecl:
      indecl: true
      max_cardinality: 1
    genetive:
      optional: true
      orientation: right
      gramm: [noun,gen]
    genetive_uniq:
      max_cardinality: 1
      orientation: right
      gramm: [noun,gen]
    genetive_oblig:
      orientation: right
      gramm: [noun,gen]
    indecl_genet:
      optional: true
      indecl: true
      orientation: right
    within:
      optional: true
      gramm: [noun,gen]
      prefix: [из,с]
    inside:
      optional: true
      gramm: [noun,loc]
      prefix: [в]
    inside_oblig:
      gramm: [noun,loc]
      prefix: [в]      
    inside_acc:
      optional: true
      gramm: [noun,acc]
      prefix: [в]
    on_the:
      optional: true
      gramm: [noun,loc]
      prefix: [на]

abstract_named_object:
  extends: abstract_object
  gov:
    name:
      orientation: right
      gramm: [noun,nom]
