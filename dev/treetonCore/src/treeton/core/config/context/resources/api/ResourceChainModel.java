/*
 * Copyright Anatoly Starostin (c) 2017.
 */

package treeton.core.config.context.resources.api;

import treeton.core.config.context.ContextException;

/**
 * Интерфейс описывает модель данных, которые необходимы менеджеру ресурсов
 * для создания цепочки ресурсов обработки текста. Цепочка ресурсов представляет
 * последовательность звений, каждое из которых отсылает либо к некоторому
 * ресурсу обработки текста, либо к другой цепочке ресурсов. При создании
 * цепочки ресурсов менеджер ресурсов автоматически проверяет наличие циклов
 * в описании. Если встречает цикл, бросается исключение. Каждое звено имеет
 * специальную характеристику passParameters, значение true которой сообщает
 * о том, что при инициализации цепочки ресурсов, которой принадлежит звено,
 * все ее параметры инициализации следует передать звену.
 */

public interface ResourceChainModel extends ResourceModel {

    /**
     * Получение количества звений цепочки
     *
     * @return количество звений цепочки
     */

    public int size() throws ContextException;

    /**
     * Получение i-го звена цепочки
     *
     * @param i - номер звена
     * @return модель звена цепочки
     */

    public ResourceChainNode get(int i) throws ContextException;
}
