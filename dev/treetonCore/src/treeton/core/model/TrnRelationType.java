/*
 * Copyright Anatoly Starostin (c) 2017.
 */

package treeton.core.model;


/**
 * Тринотации отличаются от стандартных GATE-образных аннотаций тем, что они помимо набора атрибутов могут иметь
 * внутреннюю структуру -- дерево, в узлах которого стоят другие тринотации. Связи этого дерева типизированы. В рамках
 * определенного контекста предметной области доступен фиксированный набор типов связей
 * (см. {@link treeton.core.model.TrnRelationTypeStorage}). Данный класс служит для описания конкретного типа связей.
 * Тип связи характеризуется именем и свойством isRoot. Если две тринотации связаны связью, для типа которой
 * isRoot() == true, то это трактуется системой как вложение одной тринотации в другую. В противном случае две
 * тринотации связываются на одном уровне вложенности.
 */

public interface TrnRelationType {
    /**
     * Получить имя тринотации
     *
     * @return имя
     */

    public String getName() throws TreetonModelException;

    /**
     * Получить уникальный номер типа связи. Номера всех типов связей должны образовывать компактное множество
     * чисел, начинающееся с нуля.
     *
     * @return номер
     */

    public int getIndex() throws TreetonModelException;

    /**
     * Узнать, описывает ли тип связи, связи, используемые для обозначения одной тринотации в другую.
     *
     * @return true, если является
     */

    public boolean isRoot() throws TreetonModelException;
}
