# Use character '#' or '!' to comment line
# Use backslash at end of line to continue at next line.

# path to meters' description grammar
metricGrammarPath=./domains/Russian.Prosody/resources/meteranalyzer/first.mdl
# Double value that indicates weight of the stress restriction violation.
stressRestrictionViolationWeight=1
# Double value that indicates weight of the reaccentuation restriction violation.
reaccentuationRestrictionViolationWeight=3
# Number of elements that will form a window representing each metric template in the resulting metric vectors.
# Each of such numbers inside the window corresponds to certain "footness" - number of stressed metric terms (s or S)
# that were used during matching.
# spacePerMeter may be set to -1. In this case system will work in average footness mode. For each meter system will calculate
# three numbers: probability of the meter, average footness, variance of the footness. 
spacePerMeter=10
# When filterSmallProbabilities is true all components of the average metric vector which are less or equal than 0.5 will be set to zero
filterSmallProbabilities=false
# Three following multipliers are used only in average footness mode
# Every meter probability in the resulting vector will be multiplied on this value
meterMultiplier=1.0
# Every average footness in the resulting vector will be multiplied on this value
footnessMultiplier=0.25
# Every footness variance in the resulting vector will be multiplied on this value
footnessVarianceMultiplier=0.25
# Maximum number of stress restrictions that may be violated during matching
maxStressRestrictionViolations=3
# Maximum number of reaccentuation restrictions that may be violated during matching
maxReaccentuationRestrictionViolations=2
# Maximum number of syllables within one verse. Verses containing more syllables will be skipped
maxSyllablesPerVerse=23
# To gain better performance accent disambiguation algorithm tries to split input lyrics into fragments
# considering gaps between verses and metric similarity of the neighbouring continuous verse blocks. 
# If metric similarity of two adjacent blocks overpasses the threshold blocks are merged together.
fragmentSimilarityThreshold=0.75
# Do not take into account accents gathered from morphological analysis
noMorph=false
# Perform second pass ("vertical" analysis) to detect accents in complex cases using metric characteristics of the whole text and text fragments
secondPass=true
# Calculate metric fragments during analysis. If this option is true metric characteristics of metric fragments will be taken into account on the second pass.
calculateFragments=true
# Do treat input verses as formatted (trying to locate "{bla}" and "{bla'}" fragments which mean forced stressed and unstressed zones correspondingly)
parseFormattedLyrics=false
# If this parameter is true only average metric vectors will be written in output files 
compactOutput=true
# Number of nonempty verses that will be used to count average metric vector (use -1 to take all verses into account)
numberOfVersesForAverageVector=-1
# Some texts may contain title (first non empty line followed by empty line). This title will not be considered as metric verse in all texts marked 
# with following tags (separated by ';')
tagsWhereToSkipHeader=poetry;some_other_tag
# Must be set to true if input files contain only text without any header
noHeader=true
